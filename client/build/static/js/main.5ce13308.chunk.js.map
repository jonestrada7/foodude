{"version":3,"sources":["SearchBar.js","Card.js","Form.js","About.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","handleSearch","e","key","console","log","state","searchQuery","fetch","then","response","json","JSON","stringify","assignEntriesArray","entriesArray","handleTyping","target","value","setState","Fragment","className","style","type","name","placeholder","onKeyDown","this","onChange","href","React","Component","Card","alt","src","image","id","onMouseOver","currentTarget","onMouseOut","likes","location","price","description","Form","food","handleSubmit","bind","handleChange","event","alert","preventDefault","method","headers","body","onSubmit","for","required","rows","About","App","toggleSideBar","document","getElementById","classList","toggle","renderPage","menuChoice","res","text","onClick","to","exact","path","map","foodEntry","index","foodName","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ce13308.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass SearchBar extends React.Component{\r\n\r\n    constructor(props)\r\n    { \r\n        super(props);\r\n        this.state = {searchQuery: \"\"};\r\n    }\r\n    \r\n    handleSearch = (e) => {\r\n        if (e.key === 'Enter') {\r\n            console.log(\"Sumbit! with value \" + this.state.searchQuery);\r\n            fetch(`/api/search?food=${this.state.searchQuery}`)\r\n            .then(response => {\r\n                response.json().then( json =>{\r\n                    console.log(\"Success! Received Json: \" + JSON.stringify(json));\r\n                    this.props.assignEntriesArray(json.entriesArray);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    \r\n    handleTyping = (e) => {\r\n        console.log(\"Typing: \", e.target.value);\r\n        this.setState({searchQuery: e.target.value});\r\n      }\r\n    \r\n    render(){\r\n        return (<React.Fragment>\r\n            <div className=\"d-flex h-100\" style={{\"paddingLeft\": \"10vw\",\"paddingTop\": \"10px\"}}>\r\n                <div className=\"searchbar\">\r\n                    <input className=\"search_input\" type=\"text\" name=\"search\" placeholder=\"Search...\" onKeyDown={this.handleSearch} onChange={this.handleTyping} value={this.state.searchQuery}>         \r\n                    </input>\r\n                    <a href=\"#\" className=\"search_icon\"><i className=\"fas fa-search\"></i></a>\r\n                </div>\r\n            </div>\r\n            <br>\r\n            </br>\r\n        </React.Fragment>);\r\n    }\r\n}\r\n\r\nexport default SearchBar; ","import React from \"react\"; \r\n\r\nfunction Card(props){\r\n    return <React.Fragment>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\" style={{\"width\":\"100%\",\"padding\":\"2%\"}}>\r\n                    <img alt =\"\" style={{\"borderRadius\": \"20px\"}}src={props.image}></img>\r\n                    <center>\r\n                        <p style={{\"paddingTop\": \"1%\"}}>\r\n                            <br></br>\r\n        \r\n                            <img alt = \"\" id=\"checkbox\"style={{\"width\":\"10%\" ,\"paddingBottom\": \"2%\"}}\r\n                            src=\"https://i.imgur.com/fywmJLQ.png\" onMouseOver={e => (e.currentTarget.src=\"https://i.imgur.com/pG6NbsI.png\")} \r\n                            onMouseOut={e => (e.currentTarget.src=\"https://i.imgur.com/fywmJLQ.png\")}\r\n                            className=\"likeImage\"></img>\r\n                                {props.likes} Likes\r\n                        </p>\r\n                    </center>\r\n                </div> \r\n                <div className=\"col-md-8\" style={{\"padding\":\"1%\"}}>\r\n                <h1 style={{\"color\":\"beige\",\"paddingLeft\":\"1%\"}}>{props.type} </h1>\r\n                {/* <p style={{\"paddingLeft\":\"1%\",\"paddingRight\":\"1%\" ,\"wordWrap\":\"break-word\"}}>{props.type}</p> */}\r\n                    <h4 style={{\"color\":\"beige\",\"paddingLeft\":\"1%\"}}><b>Location: </b>{props.location} </h4>\r\n                    <h2 style={{\"paddingLeft\":\"1%\"}}>${props.price}</h2>\r\n                    <p style={{\"paddingLeft\":\"1%\",\"paddingRight\":\"1%\", \"paddingTop\":\"4%\", \"wordWrap\":\"break-word\"}}> <b>Type of food: </b>{props.name}</p>\r\n                    <p style={{\"paddingTop\": \"10px\",\"color\":\"beige\", \"paddingLeft\":\"1%\"}}><b>Description: </b>{props.description} </p>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br></br>\r\n    </React.Fragment>;\r\n    \r\n}\r\n\r\nexport default Card; ","import React from \"react\";\r\nimport  \"./Form.css\"; \r\n\r\nclass Form extends React.Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      food: '',\r\n      type: '',\r\n      price: 0,\r\n      description: '',\r\n      location: '',\r\n      image: ''\r\n    };\r\n      \r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n  handleChange(event){\r\n    if (event.target.name == \"food\") {\r\n      this.setState({ food: event.target.value });\r\n    } \r\n    else if (event.target.name == \"type\") {\r\n      this.setState({ type: event.target.value });\r\n    }\r\n    else if (event.target.name == \"price\") {\r\n      this.setState({ price: event.target.value });\r\n    }\r\n    else if (event.target.name == \"description\") {\r\n      this.setState({ description: event.target.value });\r\n    }\r\n    else if (event.target.name == \"location\") {\r\n      this.setState({ location: event.target.value });\r\n    }\r\n    else if (event.target.name == \"image\") {\r\n      this.setState({ image: event.target.value });\r\n    }\r\n  }\r\n  \r\n  handleSubmit(event){\r\n    // console.log(this.state);\r\n    alert(\"Thank you for your submission! :)\");\r\n    event.preventDefault();\r\n    \r\n    fetch('/api/createEntry', { \r\n      method: 'POST',\r\n      headers:{'content-type': 'application/json'},\r\n      body: JSON.stringify(this.state)\r\n    });\r\n  }\r\n  \r\n  render(){\r\n    return <React.Fragment>\r\n       <div className=\"box\"style={{\"paddingLeft\":\"10%\",\"paddingBottom\":\"2%\"}}>\r\n        <form onSubmit={this.handleSubmit}>\r\n            <div className = \"form-group\">\r\n              <label for=\"food\">Menu Item</label>\r\n              <input id=\"food\" className = \"form-control\" type=\"text\" name=\"food\" value={this.state.food} onChange={this.handleChange} placeholder = \"Enter Food\" required></input>\r\n            </div>\r\n            \r\n            <div className = \"form-group\">\r\n              <label for=\"type\">Type Of Food</label>\r\n              <input id=\"type\"type=\"text\" className = \"form-control\" name=\"type\" value={this.state.type} onChange={this.handleChange} placeholder = \"Enter Type of Food (e.g. pizza, boba, pasta)\" required></input>\r\n            </div>\r\n            \r\n            <div className = \"form-group\">\r\n              <label for=\"price\">Price</label>\r\n              <input id=\"price\"type=\"text\" className = \"form-control\" name=\"price\" value={this.state.price} onChange={this.handleChange} placeholder = \"Enter Price\" required></input>\r\n            </div>\r\n          \r\n            <div className = \"form-group\">\r\n              <label for=\"description\">Description</label>\r\n              <textarea name = \"description\" className = \"form-control\" rows = \"3\" id = \"description\" value={this.state.description} onChange={this.handleChange} placeholder = \"Enter your experience!\"></textarea>\r\n            </div>\r\n\r\n            <div className = \"form-group\">\r\n              <label for = \"location\">Location</label>\r\n              <input id=\"location\" type=\"text\" name=\"location\" className = \"form-control\" value={this.state.location} onChange={this.handleChange} placeholder = \"Enter Location\" required></input>\r\n            </div>\r\n\r\n            <div className = \"form-group\">\r\n              <label for = \"image\">Image URL</label>\r\n              <input id = \"location\" type = \"text\" name = \"image\" className = \"form-control\" value={this.state.image} onChange={this.handleChange}placeholder = \"Image URL\"></input>\r\n            </div>\r\n\r\n            <button id=\"sub\" type=\"submit\" className = \"btn btn-secondary btn-large\">Post!!</button>\r\n      </form> \r\n    </div>\r\n    <br></br>\r\n    </React.Fragment>\r\n\r\n  }\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport \"./About.css\"; \r\n\r\nclass About extends React.Component {\r\n\r\n    render () {\r\n        return <React.Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                    <div className=\"card-wrapper\">\r\n                    <div className=\"card\">\r\n                        <img src=\"https://www.htmlcsscolor.com/preview/gallery/353B48.png\" alt=\"card background\" className=\"card-img\"></img>\r\n                        <img style={{\"zIndex\": \"1\"}} src=\"https://i.imgur.com/LcGfsL5.jpg\" alt=\"profile image\" className=\"profile-img\"></img>\r\n                        <h1>Jon Estrada</h1>\r\n                        <p className=\"job-title\">HackUCI Programmer</p>\r\n                        <p className=\"about\">jonatae2@uci.edu</p>\r\n                        <p className=\"job-title\">&nbsp;</p>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                <div className=\"col-md-3\">\r\n                    <div className=\"card-wrapper\">\r\n                    <div className=\"card\">\r\n                    <img src=\"https://www.htmlcsscolor.com/preview/gallery/353B48.png\" alt=\"card background\" className=\"card-img\"></img>\r\n                    <img style={{\"zIndex\": \"1\"}} src=\"https://i.imgur.com/4UAsDLf.jpg\" alt=\"profile image\" className=\"profile-img\"></img>\r\n                    <h1>Terry Nguyen</h1>\r\n                    <p className=\"job-title\">HackUCI Programmer</p>\r\n                    <p className=\"about\">terryhn1@uci.edu</p>\r\n                    <p className=\"job-title\">&nbsp;</p>\r\n                    </div>\r\n                    </div>\r\n                    </div> \r\n                <div className=\"col-md-3\">\r\n                <div className=\"card-wrapper\">\r\n                <div className=\"card\">\r\n                    <img src=\"https://www.htmlcsscolor.com/preview/gallery/353B48.png\" alt=\"card background\" className=\"card-img\"></img>\r\n                    <img style={{\"zIndex\": \"1\"}} src=\"https://i.imgur.com/hbhdwdL.jpg\" alt=\"profile image\" className=\"profile-img\"></img>\r\n                    <h1>Caleb Bertumen</h1>\r\n                    <p className=\"job-title\">HackUCI Programmer</p>\r\n                    <p className=\"about\">cbertume@uci.edu</p>\r\n                    <p className=\"job-title\">&nbsp;</p>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                <div className=\"card-wrapper\">\r\n                <div className=\"card\">\r\n                    <img src=\"https://www.htmlcsscolor.com/preview/gallery/353B48.png\" alt=\"card background\" className=\"card-img\"></img>\r\n                    <img style={{\"zIndex\": \"1\"}} src=\"https://i.imgur.com/a0K8JY1.jpg\" alt=\"profile image\" className=\"profile-img\"></img>\r\n                    <h1>Brian Liu</h1>\r\n                    <p className=\"job-title\">HackUCI Programmer</p>\r\n                    <p className=\"about\">liuba@uci.edu</p>\r\n                    <p className=\"job-title\">&nbsp;</p>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        <br></br>\r\n    <center>\r\n        <h1 style={{\"fontFamily\": \"\\'Merriweather\\', serif\",\"color\":\"#353b48\"}}>About FooDude</h1>\r\n        <hr style={{\"borderWidth\": \"9px\", \"color\":\"#353b48\",\"borderColor\":\"#353b48\",\"backgroundColor\":\"#353b48\",\"width\":\"30%\",\"border-radius\":\"200px\"}}></hr>\r\n    </center>\r\n    <h4 style={{\"fontFamily\": \"\\'Merriweather\\', serif\",\"color\":\"#353b48\", \"paddingLeft\":\"5%\",\"paddingRight\": \"2%\"}}>FooDude is a website application that was designed for users to post about their food experience at specific locations.  Unlike other food review applications, FooDude allows for users to post pictures alongside the exact price of their meal, allowing others to see if the food fits exactly within their price range. This application helps promote restaurants, while also allowing people to share their tasty adventures!</h4>\r\n    <br></br>\r\n    <br></br>\r\n    </React.Fragment>\r\n    }\r\n}\r\n\r\nexport default About; ","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport SearchBar from './SearchBar.js';\r\nimport Card from './Card.js';\r\nimport Form from './Form.js'; \r\nimport About from \"./About.js\";\r\n\r\nclass App extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props)\r\n      this.state = {\r\n        entriesArray: [] ,\r\n        menuChoice: 0\r\n      }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    fetch('/')    \r\n      // .then(res => res.json())\r\n      // .then(foodEntries => this.setState({ foodEntries }));\r\n      .then(res => res.json())\r\n      .then(text => console.log(text));\r\n  };\r\n  \r\n  assignEntriesArray = (entriesArray) => {\r\n    this.setState({entriesArray: entriesArray});\r\n  }\r\n  \r\n  toggleSideBar = () =>{\r\n    document.getElementById(\"sidebar\").classList.toggle('active');\r\n  }\r\n\r\n  // assignMenuChoice = (menuChoice) => {\r\n  //   this.setState({menuChoice: menuChoice});\r\n  // }\r\n   \r\n  renderPage = () => {\r\n    if (this.state.menuChoice == 0 ){\r\n      // return <React.Fragment>\r\n      //   <SearchBar assignEntriesArray ={this.assignEntriesArray}></SearchBar>\r\n      //   { this.state.entriesArray.map((foodEntry,index) => \r\n      //     <Card name = {foodEntry.name} price = {foodEntry.price} \r\n      //     description = {foodEntry.description} locations = {foodEntry.locations} image = {foodEntry.image} key={index}>\r\n      //     </Card>\r\n      //   )\r\n      //   }\r\n      // </React.Fragment>\r\n    \r\n    } else {\r\n      return <React.Fragment>\r\n        <Form></Form>\r\n      </React.Fragment>\r\n    } \r\n  }\r\n\r\n    render(){\r\n      return <React.Fragment>\r\n        <Router>\r\n        <div id=\"sidebar\">\r\n          <div className=\"toggle-btn\" onClick={this.toggleSideBar}>\r\n            <a>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </a>\r\n              </div>\r\n                <ul id = \"menuList\">\r\n                  {/* onClick = {this.menuClick(this.id)} */}\r\n                  <li id = \"0\"  style={{\"fontFamily\": \"\\'Merriweather\\', serif\",\"backgroundColor\": \"#353b48\",\"padding\":\"20px\", \"color\":\"white\"}}><Link to=\"/\"style={{\"color\":\"beige\",\"textDecoration\": \"none\"}} >Home</Link></li>\r\n                  <li id = \"1\" style= {{\"fontFamily\": \"\\'Merriweather\\', serif\",\"backgroundColor\": \"#353b48\",\"padding\":\"20px\", \"color\":\"white\"}}><Link to=\"/create\" style={{\"color\":\"beige\",\"textDecoration\": \"none\"}} >Upload</Link></li>\r\n                  <li id = \"2\" style={{\"fontFamily\": \"\\'Merriweather\\', serif\", \"backgroundColor\": \"#353b48\",\"padding\":\"20px\", \"color\":\"white\"}}><Link to=\"/about\" style={{\"color\":\"beige\",\"textDecoration\": \"none\"}} >About</Link></li>\r\n                </ul>\r\n              </div>\r\n              <center> \r\n                <h1 style={{\"fontFamily\": \"\\'Merriweather\\', serif\",\"backgroundColor\": \"#353b48\",\"padding\":\"20px\", \"color\":\"white\"}}>\r\n                  FOODUDE \r\n                  <img src=\"https://i.imgur.com/pkMF0BL.png\" style={{\"width\":\"9vh\"}}></img>\r\n                </h1>\r\n                  </center>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                  <SearchBar assignEntriesArray ={this.assignEntriesArray}></SearchBar>\r\n                  { this.state.entriesArray.map((foodEntry,index) => \r\n                    <Card name = {foodEntry.name} price = {foodEntry.price} \r\n                    description = {foodEntry.description} type = {foodEntry.foodName} image = {foodEntry.image} location = {foodEntry.location} likes = {foodEntry.likes} key={index}>\r\n                    </Card>\r\n                  )}\r\n              </Route>\r\n              <Route path=\"/create\">\r\n                <Form></Form>\r\n              </Route>\r\n              <Route path= \"/about\">\r\n                <About></About>\r\n              </Route>\r\n            </Switch>\r\n          {this.renderPage()}\r\n        </Router>\r\n      </React.Fragment>\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}